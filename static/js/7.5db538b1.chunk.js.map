{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Login/Login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","console","log","length","FormControl","meta","touched","error","children","hasError","className","classes","formControl","Input","props","input","restProps","Textarea","createField","placeholder","name","component","validators","text","validate","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,iBAAmB,0C,iCCD1E,oEAAO,IAAMC,EAAW,SAAAC,GACtB,IAAIA,EAEJ,MAAO,qBAGIC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAE9C,GADAG,QAAQC,IAAIJ,GACRA,EAAMK,OAASH,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,+LCJ1BI,EAAc,SAAC,GAA4C,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SACzCC,EAAWH,GAAWC,EAE5B,OAAO,yBAAKG,UAAWC,IAAQC,YAAc,KAAOH,EAAWE,IAAQJ,MAAQ,KAC7E,6BAAMC,GACLC,GAAY,8BAAOF,KAIXM,EAAQ,SAAAC,GAAU,IACrBC,EAA8BD,EAA9BC,MAAgBC,GAAcF,EAAvBT,KADa,YACUS,EADV,mBAG5B,OAAO,kBAACV,EAAgBU,EAAO,2CAAWC,EAAWC,MAG1CC,EAAW,SAAAH,GAAU,IACxBC,EAA8BD,EAA9BC,MAAgBC,GAAcF,EAAvBT,KADgB,YACOS,EADP,mBAG/B,OAAO,kBAACV,EAAgBU,EAAO,8CAAcC,EAAWC,MAG7CE,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAA/B,IAA2CR,EAA3C,uDAAmD,GAAIS,EAAvD,uDAA8D,GAA9D,OACzB,6BACE,kBAAC,IAAD,eAAOJ,YAAaA,EAClBC,KAAMA,EACNC,UAAWA,EACXG,SAAUF,GACNR,IALR,IAKmBS,K,iCC/BrB,+FA2BME,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAlBL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcrB,EAAY,EAAZA,MACjC,OACE,0BAAMsB,SAAUD,GACbV,YAAY,QAAS,QAASL,IAAO,CAAChB,MACtCqB,YAAY,WAAY,WAAYL,IAAO,CAAChB,KAAW,CAAEiC,KAAM,aAC/DZ,YAAY,KAAM,aAAcL,IAAO,KAAM,CAAEiB,KAAM,YAAc,gBAElEvB,GAAS,yBAAKG,UAAWC,IAAQoB,kBAC9BxB,GAGL,6BACE,8CA2BOyB,uBAJS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,UAGmB,CAAEE,WAA3BJ,EAnBD,SAAC,GAAuB,IAArBI,EAAoB,EAApBA,MAKf,OALmC,EAAbF,OAMb,kBAAC,IAAD,CAAUG,GAAI,aAGhB,6BACL,qCACA,kBAACZ,EAAD,CAAgBI,SAVD,SAACS,GAChBF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.5db538b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__Fp_xa\",\"formSummaryError\":\"FormsControls_formSummaryError__3clec\"};","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return 'Filed is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  console.log(value)\r\n  if (value.length > maxLength) return `Max length if ${maxLength} symbols`;\r\n\r\n  return undefined;\r\n}","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport classes from './FormsControls.module.css';\r\n\r\nconst FormControl = ({ meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n\r\n  return <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\r\n    <div>{children}</div>\r\n    {hasError && <span>{error}</span>}\r\n  </div>\r\n}\r\n\r\nexport const Input = props => {\r\n  const { input, meta, ...restProps } = props;\r\n\r\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Textarea = props => {\r\n  const { input, meta, ...restProps } = props;\r\n\r\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props = {}, text = '') => (\r\n  <div>\r\n    <Field placeholder={placeholder}\r\n      name={name}\r\n      component={component}\r\n      validate={validators}\r\n      {...props} /> {text}\r\n  </div>\r\n)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport { login } from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router';\r\nimport classes from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField('Email', 'email', Input, [required])}\r\n      {createField('Password', 'password', Input, [required], { type: 'password' })}\r\n      {createField(null, 'rememberMe', Input, null, { type: 'checkbox' }, ' remember me')}\r\n      {\r\n        error && <div className={classes.formSummaryError}>\r\n          {error}\r\n        </div>\r\n      }\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = ({ login, isAuth }) => {\r\n  const onSubmit = (formData) => {\r\n    login(formData.email, formData.password, formData.rememberMe);\r\n  }\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  }\r\n\r\n  return <div>\r\n    <h1>Login</h1>\r\n    <LoginReduxForm onSubmit={onSubmit} />\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}